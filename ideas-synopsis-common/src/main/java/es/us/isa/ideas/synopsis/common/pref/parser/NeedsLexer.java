// Generated from C:\Users\ISA Group\Desktop\Parsers\Synopsis-parser\Needs.g4 by ANTLR 4.1
package es.us.isa.ideas.synopsis.common.pref.parser;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class NeedsLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		NEEDS=1, ITEMS=2, REQUIREMENTS=3, PREFERENCES=4, INTEGER=5, FLOAT=6, BOOLEAN=7, 
		SET=8, ENUM=9, TRUE=10, FALSE=11, ON=12, SUM=13, MIN=14, MAX=15, FAVORITES=16, 
		DISLIKES=17, HIGHEST=18, LOWEST=19, AROUND=20, CA=21, CC=22, PA=23, PC=24, 
		LLA=25, LLC=26, DP=27, PyC=28, COMA=29, DOT=30, AND=31, OR=32, NOT=33, 
		IMPLIES=34, REQUIRES=35, IFF=36, EXCLUDES=37, PLUS=38, HYPHEN=39, ASTERISK=40, 
		SLASH=41, LT=42, GT=43, EQ=44, NEQ=45, LTE=46, GTE=47, ASSIG=48, Identifier=49, 
		String=50, Integer=51, S_Integer=52, Float=53, S_Float=54, Boolean=55, 
		WS=56, COMMENT=57, LINE_COMMENT=58;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"'Needs'", "'%Items'", "'%Requirements'", "'%Preferences'", "'int'", "'real'", 
		"'boolean'", "'set'", "'enum'", "'true'", "'false'", "'on'", "'sum'", 
		"'min'", "'max'", "'Favorites'", "'Dislikes'", "'Highest'", "'Lowest'", 
		"'Around'", "'['", "']'", "'('", "')'", "'{'", "'}'", "':'", "';'", "','", 
		"'.'", "'&&'", "'||'", "'!'", "'->'", "'REQUIRES'", "'IFF'", "'EXCLUDES'", 
		"'+'", "'-'", "'*'", "'/'", "'<'", "'>'", "'=='", "'!='", "'<='", "'>='", 
		"'='", "Identifier", "String", "Integer", "S_Integer", "Float", "S_Float", 
		"Boolean", "WS", "COMMENT", "LINE_COMMENT"
	};
	public static final String[] ruleNames = {
		"NEEDS", "ITEMS", "REQUIREMENTS", "PREFERENCES", "INTEGER", "FLOAT", "BOOLEAN", 
		"SET", "ENUM", "TRUE", "FALSE", "ON", "SUM", "MIN", "MAX", "FAVORITES", 
		"DISLIKES", "HIGHEST", "LOWEST", "AROUND", "CA", "CC", "PA", "PC", "LLA", 
		"LLC", "DP", "PyC", "COMA", "DOT", "AND", "OR", "NOT", "IMPLIES", "REQUIRES", 
		"IFF", "EXCLUDES", "PLUS", "HYPHEN", "ASTERISK", "SLASH", "LT", "GT", 
		"EQ", "NEQ", "LTE", "GTE", "ASSIG", "Identifier", "Letter", "LetterOrDigit", 
		"Digit", "NonZeroDigit", "String", "Integer", "S_Integer", "Float", "S_Float", 
		"Boolean", "WS", "COMMENT", "LINE_COMMENT"
	};


	public NeedsLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Needs.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public void action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 59: WS_action((RuleContext)_localctx, actionIndex); break;

		case 60: COMMENT_action((RuleContext)_localctx, actionIndex); break;

		case 61: LINE_COMMENT_action((RuleContext)_localctx, actionIndex); break;
		}
	}
	private void WS_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0: skip();  break;
		}
	}
	private void LINE_COMMENT_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 2: skip();  break;
		}
	}
	private void COMMENT_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 1: skip();  break;
		}
	}

	public static final String _serializedATN =
		"\3\uacf5\uee8c\u4f5d\u8b0d\u4a45\u78bd\u1b2f\u3378\2<\u01aa\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\3\2\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\4\3"+
		"\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3\5\3\5\3\5"+
		"\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3\7\3\7\3"+
		"\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\13"+
		"\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\16\3\16\3\16"+
		"\3\16\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3\21"+
		"\3\21\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22"+
		"\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3\24\3\24"+
		"\3\24\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\26\3\26\3\27\3\27\3\30\3\30"+
		"\3\31\3\31\3\32\3\32\3\33\3\33\3\34\3\34\3\35\3\35\3\36\3\36\3\37\3\37"+
		"\3 \3 \3 \3!\3!\3!\3\"\3\"\3#\3#\3#\3$\3$\3$\3$\3$\3$\3$\3$\3$\3%\3%\3"+
		"%\3%\3&\3&\3&\3&\3&\3&\3&\3&\3&\3\'\3\'\3(\3(\3)\3)\3*\3*\3+\3+\3,\3,"+
		"\3-\3-\3-\3.\3.\3.\3/\3/\3/\3\60\3\60\3\60\3\61\3\61\3\62\3\62\3\62\7"+
		"\62\u0157\n\62\f\62\16\62\u015a\13\62\3\63\3\63\3\64\3\64\3\65\3\65\5"+
		"\65\u0162\n\65\3\66\3\66\3\67\3\67\7\67\u0168\n\67\f\67\16\67\u016b\13"+
		"\67\3\67\3\67\3\67\7\67\u0170\n\67\f\67\16\67\u0173\13\67\3\67\5\67\u0176"+
		"\n\67\38\68\u0179\n8\r8\168\u017a\39\39\39\3:\3:\3:\3:\3;\3;\3;\3<\3<"+
		"\5<\u0189\n<\3=\6=\u018c\n=\r=\16=\u018d\3=\3=\3>\3>\3>\3>\7>\u0196\n"+
		">\f>\16>\u0199\13>\3>\3>\3>\3>\3>\3?\3?\3?\3?\7?\u01a4\n?\f?\16?\u01a7"+
		"\13?\3?\3?\3\u0197@\3\3\1\5\4\1\7\5\1\t\6\1\13\7\1\r\b\1\17\t\1\21\n\1"+
		"\23\13\1\25\f\1\27\r\1\31\16\1\33\17\1\35\20\1\37\21\1!\22\1#\23\1%\24"+
		"\1\'\25\1)\26\1+\27\1-\30\1/\31\1\61\32\1\63\33\1\65\34\1\67\35\19\36"+
		"\1;\37\1= \1?!\1A\"\1C#\1E$\1G%\1I&\1K\'\1M(\1O)\1Q*\1S+\1U,\1W-\1Y.\1"+
		"[/\1]\60\1_\61\1a\62\1c\63\1e\2\1g\2\1i\2\1k\2\1m\64\1o\65\1q\66\1s\67"+
		"\1u8\1w9\1y:\2{;\3}<\4\3\2\13\4\2/\60aa\6\2&&C\\aac|\7\2&&\62;C\\aac|"+
		"\3\2\63;\3\2))\3\2$$\4\2--//\5\2\13\f\17\17\"\"\4\2\f\f\17\17\u01b0\2"+
		"\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2"+
		"\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2"+
		"\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2"+
		"\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2"+
		"\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2"+
		"\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2"+
		"\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U"+
		"\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2"+
		"\2\2\2c\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2"+
		"\2w\3\2\2\2\2y\3\2\2\2\2{\3\2\2\2\2}\3\2\2\2\3\177\3\2\2\2\5\u0085\3\2"+
		"\2\2\7\u008c\3\2\2\2\t\u009a\3\2\2\2\13\u00a7\3\2\2\2\r\u00ab\3\2\2\2"+
		"\17\u00b0\3\2\2\2\21\u00b8\3\2\2\2\23\u00bc\3\2\2\2\25\u00c1\3\2\2\2\27"+
		"\u00c6\3\2\2\2\31\u00cc\3\2\2\2\33\u00cf\3\2\2\2\35\u00d3\3\2\2\2\37\u00d7"+
		"\3\2\2\2!\u00db\3\2\2\2#\u00e5\3\2\2\2%\u00ee\3\2\2\2\'\u00f6\3\2\2\2"+
		")\u00fd\3\2\2\2+\u0104\3\2\2\2-\u0106\3\2\2\2/\u0108\3\2\2\2\61\u010a"+
		"\3\2\2\2\63\u010c\3\2\2\2\65\u010e\3\2\2\2\67\u0110\3\2\2\29\u0112\3\2"+
		"\2\2;\u0114\3\2\2\2=\u0116\3\2\2\2?\u0118\3\2\2\2A\u011b\3\2\2\2C\u011e"+
		"\3\2\2\2E\u0120\3\2\2\2G\u0123\3\2\2\2I\u012c\3\2\2\2K\u0130\3\2\2\2M"+
		"\u0139\3\2\2\2O\u013b\3\2\2\2Q\u013d\3\2\2\2S\u013f\3\2\2\2U\u0141\3\2"+
		"\2\2W\u0143\3\2\2\2Y\u0145\3\2\2\2[\u0148\3\2\2\2]\u014b\3\2\2\2_\u014e"+
		"\3\2\2\2a\u0151\3\2\2\2c\u0153\3\2\2\2e\u015b\3\2\2\2g\u015d\3\2\2\2i"+
		"\u0161\3\2\2\2k\u0163\3\2\2\2m\u0175\3\2\2\2o\u0178\3\2\2\2q\u017c\3\2"+
		"\2\2s\u017f\3\2\2\2u\u0183\3\2\2\2w\u0188\3\2\2\2y\u018b\3\2\2\2{\u0191"+
		"\3\2\2\2}\u019f\3\2\2\2\177\u0080\7P\2\2\u0080\u0081\7g\2\2\u0081\u0082"+
		"\7g\2\2\u0082\u0083\7f\2\2\u0083\u0084\7u\2\2\u0084\4\3\2\2\2\u0085\u0086"+
		"\7\'\2\2\u0086\u0087\7K\2\2\u0087\u0088\7v\2\2\u0088\u0089\7g\2\2\u0089"+
		"\u008a\7o\2\2\u008a\u008b\7u\2\2\u008b\6\3\2\2\2\u008c\u008d\7\'\2\2\u008d"+
		"\u008e\7T\2\2\u008e\u008f\7g\2\2\u008f\u0090\7s\2\2\u0090\u0091\7w\2\2"+
		"\u0091\u0092\7k\2\2\u0092\u0093\7t\2\2\u0093\u0094\7g\2\2\u0094\u0095"+
		"\7o\2\2\u0095\u0096\7g\2\2\u0096\u0097\7p\2\2\u0097\u0098\7v\2\2\u0098"+
		"\u0099\7u\2\2\u0099\b\3\2\2\2\u009a\u009b\7\'\2\2\u009b\u009c\7R\2\2\u009c"+
		"\u009d\7t\2\2\u009d\u009e\7g\2\2\u009e\u009f\7h\2\2\u009f\u00a0\7g\2\2"+
		"\u00a0\u00a1\7t\2\2\u00a1\u00a2\7g\2\2\u00a2\u00a3\7p\2\2\u00a3\u00a4"+
		"\7e\2\2\u00a4\u00a5\7g\2\2\u00a5\u00a6\7u\2\2\u00a6\n\3\2\2\2\u00a7\u00a8"+
		"\7k\2\2\u00a8\u00a9\7p\2\2\u00a9\u00aa\7v\2\2\u00aa\f\3\2\2\2\u00ab\u00ac"+
		"\7t\2\2\u00ac\u00ad\7g\2\2\u00ad\u00ae\7c\2\2\u00ae\u00af\7n\2\2\u00af"+
		"\16\3\2\2\2\u00b0\u00b1\7d\2\2\u00b1\u00b2\7q\2\2\u00b2\u00b3\7q\2\2\u00b3"+
		"\u00b4\7n\2\2\u00b4\u00b5\7g\2\2\u00b5\u00b6\7c\2\2\u00b6\u00b7\7p\2\2"+
		"\u00b7\20\3\2\2\2\u00b8\u00b9\7u\2\2\u00b9\u00ba\7g\2\2\u00ba\u00bb\7"+
		"v\2\2\u00bb\22\3\2\2\2\u00bc\u00bd\7g\2\2\u00bd\u00be\7p\2\2\u00be\u00bf"+
		"\7w\2\2\u00bf\u00c0\7o\2\2\u00c0\24\3\2\2\2\u00c1\u00c2\7v\2\2\u00c2\u00c3"+
		"\7t\2\2\u00c3\u00c4\7w\2\2\u00c4\u00c5\7g\2\2\u00c5\26\3\2\2\2\u00c6\u00c7"+
		"\7h\2\2\u00c7\u00c8\7c\2\2\u00c8\u00c9\7n\2\2\u00c9\u00ca\7u\2\2\u00ca"+
		"\u00cb\7g\2\2\u00cb\30\3\2\2\2\u00cc\u00cd\7q\2\2\u00cd\u00ce\7p\2\2\u00ce"+
		"\32\3\2\2\2\u00cf\u00d0\7u\2\2\u00d0\u00d1\7w\2\2\u00d1\u00d2\7o\2\2\u00d2"+
		"\34\3\2\2\2\u00d3\u00d4\7o\2\2\u00d4\u00d5\7k\2\2\u00d5\u00d6\7p\2\2\u00d6"+
		"\36\3\2\2\2\u00d7\u00d8\7o\2\2\u00d8\u00d9\7c\2\2\u00d9\u00da\7z\2\2\u00da"+
		" \3\2\2\2\u00db\u00dc\7H\2\2\u00dc\u00dd\7c\2\2\u00dd\u00de\7x\2\2\u00de"+
		"\u00df\7q\2\2\u00df\u00e0\7t\2\2\u00e0\u00e1\7k\2\2\u00e1\u00e2\7v\2\2"+
		"\u00e2\u00e3\7g\2\2\u00e3\u00e4\7u\2\2\u00e4\"\3\2\2\2\u00e5\u00e6\7F"+
		"\2\2\u00e6\u00e7\7k\2\2\u00e7\u00e8\7u\2\2\u00e8\u00e9\7n\2\2\u00e9\u00ea"+
		"\7k\2\2\u00ea\u00eb\7m\2\2\u00eb\u00ec\7g\2\2\u00ec\u00ed\7u\2\2\u00ed"+
		"$\3\2\2\2\u00ee\u00ef\7J\2\2\u00ef\u00f0\7k\2\2\u00f0\u00f1\7i\2\2\u00f1"+
		"\u00f2\7j\2\2\u00f2\u00f3\7g\2\2\u00f3\u00f4\7u\2\2\u00f4\u00f5\7v\2\2"+
		"\u00f5&\3\2\2\2\u00f6\u00f7\7N\2\2\u00f7\u00f8\7q\2\2\u00f8\u00f9\7y\2"+
		"\2\u00f9\u00fa\7g\2\2\u00fa\u00fb\7u\2\2\u00fb\u00fc\7v\2\2\u00fc(\3\2"+
		"\2\2\u00fd\u00fe\7C\2\2\u00fe\u00ff\7t\2\2\u00ff\u0100\7q\2\2\u0100\u0101"+
		"\7w\2\2\u0101\u0102\7p\2\2\u0102\u0103\7f\2\2\u0103*\3\2\2\2\u0104\u0105"+
		"\7]\2\2\u0105,\3\2\2\2\u0106\u0107\7_\2\2\u0107.\3\2\2\2\u0108\u0109\7"+
		"*\2\2\u0109\60\3\2\2\2\u010a\u010b\7+\2\2\u010b\62\3\2\2\2\u010c\u010d"+
		"\7}\2\2\u010d\64\3\2\2\2\u010e\u010f\7\177\2\2\u010f\66\3\2\2\2\u0110"+
		"\u0111\7<\2\2\u01118\3\2\2\2\u0112\u0113\7=\2\2\u0113:\3\2\2\2\u0114\u0115"+
		"\7.\2\2\u0115<\3\2\2\2\u0116\u0117\7\60\2\2\u0117>\3\2\2\2\u0118\u0119"+
		"\7(\2\2\u0119\u011a\7(\2\2\u011a@\3\2\2\2\u011b\u011c\7~\2\2\u011c\u011d"+
		"\7~\2\2\u011dB\3\2\2\2\u011e\u011f\7#\2\2\u011fD\3\2\2\2\u0120\u0121\7"+
		"/\2\2\u0121\u0122\7@\2\2\u0122F\3\2\2\2\u0123\u0124\7T\2\2\u0124\u0125"+
		"\7G\2\2\u0125\u0126\7S\2\2\u0126\u0127\7W\2\2\u0127\u0128\7K\2\2\u0128"+
		"\u0129\7T\2\2\u0129\u012a\7G\2\2\u012a\u012b\7U\2\2\u012bH\3\2\2\2\u012c"+
		"\u012d\7K\2\2\u012d\u012e\7H\2\2\u012e\u012f\7H\2\2\u012fJ\3\2\2\2\u0130"+
		"\u0131\7G\2\2\u0131\u0132\7Z\2\2\u0132\u0133\7E\2\2\u0133\u0134\7N\2\2"+
		"\u0134\u0135\7W\2\2\u0135\u0136\7F\2\2\u0136\u0137\7G\2\2\u0137\u0138"+
		"\7U\2\2\u0138L\3\2\2\2\u0139\u013a\7-\2\2\u013aN\3\2\2\2\u013b\u013c\7"+
		"/\2\2\u013cP\3\2\2\2\u013d\u013e\7,\2\2\u013eR\3\2\2\2\u013f\u0140\7\61"+
		"\2\2\u0140T\3\2\2\2\u0141\u0142\7>\2\2\u0142V\3\2\2\2\u0143\u0144\7@\2"+
		"\2\u0144X\3\2\2\2\u0145\u0146\7?\2\2\u0146\u0147\7?\2\2\u0147Z\3\2\2\2"+
		"\u0148\u0149\7#\2\2\u0149\u014a\7?\2\2\u014a\\\3\2\2\2\u014b\u014c\7>"+
		"\2\2\u014c\u014d\7?\2\2\u014d^\3\2\2\2\u014e\u014f\7@\2\2\u014f\u0150"+
		"\7?\2\2\u0150`\3\2\2\2\u0151\u0152\7?\2\2\u0152b\3\2\2\2\u0153\u0158\5"+
		"e\63\2\u0154\u0157\t\2\2\2\u0155\u0157\5g\64\2\u0156\u0154\3\2\2\2\u0156"+
		"\u0155\3\2\2\2\u0157\u015a\3\2\2\2\u0158\u0156\3\2\2\2\u0158\u0159\3\2"+
		"\2\2\u0159d\3\2\2\2\u015a\u0158\3\2\2\2\u015b\u015c\t\3\2\2\u015cf\3\2"+
		"\2\2\u015d\u015e\t\4\2\2\u015eh\3\2\2\2\u015f\u0162\7\62\2\2\u0160\u0162"+
		"\5k\66\2\u0161\u015f\3\2\2\2\u0161\u0160\3\2\2\2\u0162j\3\2\2\2\u0163"+
		"\u0164\t\5\2\2\u0164l\3\2\2\2\u0165\u0169\7)\2\2\u0166\u0168\n\6\2\2\u0167"+
		"\u0166\3\2\2\2\u0168\u016b\3\2\2\2\u0169\u0167\3\2\2\2\u0169\u016a\3\2"+
		"\2\2\u016a\u016c\3\2\2\2\u016b\u0169\3\2\2\2\u016c\u0176\7)\2\2\u016d"+
		"\u0171\7$\2\2\u016e\u0170\n\7\2\2\u016f\u016e\3\2\2\2\u0170\u0173\3\2"+
		"\2\2\u0171\u016f\3\2\2\2\u0171\u0172\3\2\2\2\u0172\u0174\3\2\2\2\u0173"+
		"\u0171\3\2\2\2\u0174\u0176\7$\2\2\u0175\u0165\3\2\2\2\u0175\u016d\3\2"+
		"\2\2\u0176n\3\2\2\2\u0177\u0179\5i\65\2\u0178\u0177\3\2\2\2\u0179\u017a"+
		"\3\2\2\2\u017a\u0178\3\2\2\2\u017a\u017b\3\2\2\2\u017bp\3\2\2\2\u017c"+
		"\u017d\t\b\2\2\u017d\u017e\5o8\2\u017er\3\2\2\2\u017f\u0180\5o8\2\u0180"+
		"\u0181\7\60\2\2\u0181\u0182\5o8\2\u0182t\3\2\2\2\u0183\u0184\t\b\2\2\u0184"+
		"\u0185\5s:\2\u0185v\3\2\2\2\u0186\u0189\5\25\13\2\u0187\u0189\5\27\f\2"+
		"\u0188\u0186\3\2\2\2\u0188\u0187\3\2\2\2\u0189x\3\2\2\2\u018a\u018c\t"+
		"\t\2\2\u018b\u018a\3\2\2\2\u018c\u018d\3\2\2\2\u018d\u018b\3\2\2\2\u018d"+
		"\u018e\3\2\2\2\u018e\u018f\3\2\2\2\u018f\u0190\b=\2\2\u0190z\3\2\2\2\u0191"+
		"\u0192\7\61\2\2\u0192\u0193\7,\2\2\u0193\u0197\3\2\2\2\u0194\u0196\13"+
		"\2\2\2\u0195\u0194\3\2\2\2\u0196\u0199\3\2\2\2\u0197\u0198\3\2\2\2\u0197"+
		"\u0195\3\2\2\2\u0198\u019a\3\2\2\2\u0199\u0197\3\2\2\2\u019a\u019b\7,"+
		"\2\2\u019b\u019c\7\61\2\2\u019c\u019d\3\2\2\2\u019d\u019e\b>\3\2\u019e"+
		"|\3\2\2\2\u019f\u01a0\7\61\2\2\u01a0\u01a1\7\61\2\2\u01a1\u01a5\3\2\2"+
		"\2\u01a2\u01a4\n\n\2\2\u01a3\u01a2\3\2\2\2\u01a4\u01a7\3\2\2\2\u01a5\u01a3"+
		"\3\2\2\2\u01a5\u01a6\3\2\2\2\u01a6\u01a8\3\2\2\2\u01a7\u01a5\3\2\2\2\u01a8"+
		"\u01a9\b?\4\2\u01a9~\3\2\2\2\16\2\u0156\u0158\u0161\u0169\u0171\u0175"+
		"\u017a\u0188\u018d\u0197\u01a5";
	public static final ATN _ATN =
		ATNSimulator.deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}